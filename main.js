!function(){"use strict";const e={name:document.querySelector(".profile__name"),description:document.querySelector(".profile__description"),avatar:document.querySelector(".profile__avatar-image"),_id:"203ef5b29b8491c8911cf220"},t={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-modal"),s=document.querySelector("#add-card-modal"),i=document.querySelector("#profile-picture-modal"),n=r.querySelector(".modal__form"),a=s.querySelector(".modal__form"),o=i.querySelector(".modal__form"),l=document.querySelector("#profile-edit-button"),d=document.querySelector("#add-card-button"),c=(s.querySelector("#card-form"),document.querySelector("#modal-name")),h=document.querySelector("#modal-description"),_=(document.querySelector("#modal-title"),document.querySelector("#modal-link"),document.querySelector("#modal-image"),document.querySelector("#modal-image-title"),document.querySelector("#profile-avatar-button")),u=document.querySelector("#modal-picture"),m=document.querySelector(".profile__avatar-image");document.querySelector(".card__like-button"),document.querySelector(".card__delete-button");class p{constructor(e){this._popupElement=document.querySelector(e),this._closeBtn=this._popupElement.querySelector(".modal__exit"),this._modalBackground=this._popupElement.querySelector(".modal__background")}open(){document.addEventListener("keydown",this._handleEscapeClose),this._popupElement.classList.add("modal_opened")}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeBtn.addEventListener("click",(()=>{this.close()})),this._modalBackground.addEventListener("click",(()=>{this.close()}))}}class v extends p{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._submitBtn=this._popupElement.querySelector(".modal__save")}_getInputValues(){const e=Array.from(this._form.querySelectorAll(".modal__input")),t={};return e.forEach((e=>{t[e.name]=e.value})),t}viewLoading(e){this._submitBtn.textContent=e?"Saving...":"Save"}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}class E{constructor(e){let{name:t,link:r,isLiked:s,_id:i,cardSelector:n,handleImageClick:a,handleDeleteBtn:o,handleLikeBtn:l}=e;this._name=t,this._link=r,this._isLiked=s,this.id=i,this._cardSelector=n,this._handleImageClick=a,this._handleDeleteBtn=o,this._handleLikeBtn=l,this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._confirmModalEl=new v("#confirm-modal",this._handleConfirmBtn),this._confirmForm=document.querySelector("#confirm-modal-form")}_setEventListeners(){this._cardLikeButton.addEventListener("click",this._handleLikeBtn(this)),this._cardDeleteBtn.addEventListener("click",this._handleDeleteBtn(this)),this._confirmForm.addEventListener("submit",this._handleConfirmBtn),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}removeCard(){this._cardElement.remove()}getCardId(){return this.id}getLikedStatus(){return this._isLiked}handleIsLiked(e){this._isLiked=e,this._renderLikes()}_renderLikes(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}getView(){return this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}}class S{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_enableBtn(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableBtn(this._submitBtn,this._inactiveButtonClass):this._enableBtn(this._submitBtn,this._inactiveButtonClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._inputEls=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitBtn=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableBtn()})),this._setEventListeners()}}class f{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const L=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r,this._authorization=r.authorization,this._contentType=r.contentType}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._handleServerResponse).catch((e=>console.error(e)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes/`,{method:"PUT",headers:this._headers,body:JSON.stringify({isLiked:!0})}).then(this._handleServerResponse).catch((e=>console.error(e)))}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes/`,{method:"DELETE",headers:this._headers,body:JSON.stringify({isLiked:!1})}).then(this._handleServerResponse).catch((e=>console.error(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}setUserInfo(e,t){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,description:t})}).then(this._handleServerResponse).catch((e=>console.error(e)))}changeAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse).catch((e=>console.error(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"40adfe4e-c0e4-40a1-9506-b555db893f72","Content-Type":"application/json"}});L.getInitialCards().then((e=>{const t=new f({items:e,renderer:e=>{const r=k(e);t.addItem(r)}},".gallery__cards");t.renderItems()})).catch((e=>console.error(e))),L.getUserInfo().then((e=>{console.log(e),y.setUserInfo(e.name,e.about),y.setAvatar(e.avatar)})).catch((e=>console.error(e)));const k=e=>new E({name:e.name,link:e.link,isLiked:e.isLiked,_id:e._id,cardSelector:"#card-template",handleImageClick:U,handleDeleteBtn:T,handleLikeBtn:$}).getView(),y=new class{constructor(e){let{name:t,description:r,avatar:s}=e;this._name=t,this._job=r,this._avatar=s}getUserInfo(){return{name:this._name.textContent,description:this._job.textContent}}setUserInfo(e,t){this._name.textContent=e,this._job.textContent=t}setAvatar(e){this._avatar.src=e}}(e),b=new v("#profile-picture-modal",(function(){m.src=u.value,b.close()})),g=new v("#profile-edit-modal",(function(e){g.viewLoading(!0),L.setUserInfo(e.name,e.about).then((e=>{y.setUserInfo(e.name,e.about),C.disableBtn(),g.close()})).catch((e=>{console.error(e)})).finally((()=>{y.viewLoading(!1)}))})),B=new v("#add-card-modal",(function(e){B.viewLoading(!0),L.addCard(e).then((e=>{cardSection.addItem(k({name:e.name,link:e.link})),q.disableBtn(),B.reset(),B.close()})).catch((e=>{console.error(e)})).finally((()=>{B.viewLoading(!1)}))})),I=new class extends p{constructor(e){super(e),this._previewImage=this._popupElement.querySelector("#modal-image"),this._previewImageTitle=this._popupElement.querySelector("#modal-image-title")}open(e){let{name:t,link:r}=e;this._previewImage.alt=t,this._previewImageTitle.textContent=t,this._previewImage.src=r,super.open()}}("#image-modal"),C=new S(t,n),q=new S(t,a),w=new S(t,o);function U(e){I.open({name:e._name,link:e._link})}function $(e){const t=e.getCardId();e.getLikedStatus()?L.removeLike(t).then((t=>{e.handleIsLiked(t.getLikedStatus)})).catch((e=>{console.error(e)})):L.addLike(t).then((t=>{e.handleIsLiked(t.getLikedStatus)})).catch((e=>{console.error(e)}))}function T(){}I.setEventListeners(),g.setEventListeners(),B.setEventListeners(),b.setEventListeners(),C.enableValidation(),q.enableValidation(),w.enableValidation(),_.addEventListener("click",(()=>{u.value=m.src,b.open()})),l.addEventListener("click",(()=>{const{name:e,description:t}=y.getUserInfo();c.value=e,h.value=t,g.open()})),d.addEventListener("click",(()=>{B.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
!function(){"use strict";const e={name:document.querySelector(".profile__name"),about:document.querySelector(".profile__description"),avatar:document.querySelector(".profile__avatar-image"),_id:"203ef5b29b8491c8911cf220"},t={},r=document.querySelector("#profile-edit-modal"),s=document.querySelector("#add-card-modal"),i=document.querySelector("#profile-picture-modal"),n=r.querySelector(".modal__form"),a=s.querySelector(".modal__form"),o=i.querySelector(".modal__form"),l=document.querySelector("#profile-edit-button"),d=document.querySelector("#add-card-button"),c=document.querySelector("#modal-name"),h=document.querySelector("#modal-description"),_=(document.querySelector("#modal-title"),document.querySelector("#modal-link"),document.querySelector("#modal-image"),document.querySelector("#modal-image-title"),document.querySelector("#profile-avatar-button")),u=document.querySelector("#modal-picture");document.querySelector(".profile__avatar-image"),document.querySelector(".card__like-button"),document.querySelector(".card__delete-button"),document.querySelector(".modal__confirm");class m{constructor(e,t,r,s,i){let{name:n,link:a,isLiked:o,_id:l}=e;this._name=n,this._link=a,this._isLiked=o,this.id=l,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteBtn=s,this._handleLikeBtn=i,this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeBtn(this)})),this._cardDeleteBtn.addEventListener("click",(()=>{this._handleDeleteBtn(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}removeCard(){this._cardElement.remove()}getCardId(){return this.id}getLikedStatus(){return this._isLiked}handleIsLiked(e){this._isLiked=e,this._renderisLiked()}_renderisLiked(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}getView(){return this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._renderisLiked(),this._cardElement}}class p{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputEls=Array.from(this._formElement.querySelectorAll(this._inputSelector))}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_enableBtn(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableBtn(this._submitBtn,this._inactiveButtonClass):this._enableBtn(this._submitBtn,this._inactiveButtonClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._submitBtn=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(),this._formElement.reset()}}class v{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class E{constructor(e){this._popupElement=document.querySelector(e),this._closeBtn=this._popupElement.querySelector(".modal__exit"),this._modalBackground=this._popupElement.querySelector(".modal__background")}open(){document.addEventListener("keydown",this._handleEscapeClose),this._popupElement.classList.add("modal_opened")}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeBtn.addEventListener("click",(()=>{this.close()})),this._modalBackground.addEventListener("click",(()=>{this.close()}))}}class f extends E{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._submitBtn=this._popupElement.querySelector(".modal__save"),this._inputsArr=Array.from(this._form.querySelectorAll(".modal__input")),this._submitBtnText=this._submitBtn.textContent}_getInputValues(){const e={};return this._inputsArr.forEach((t=>{e[t.name]=t.value})),e}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitBtn.textContent=e?t:this._submitBtnText}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}let b;const L=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r,this._authorization=r.authorization,this._contentType=r.contentType}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._handleServerResponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers})}addCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}removeCard(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers})}setCardLiked(e,t){return this._request(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}getUserInfo(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers})}setUserInfo(e){let{name:t,about:r,avatar:s,_id:i}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r,avatar:s,_id:i})})}changeAvatar(e){return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.picture})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"40adfe4e-c0e4-40a1-9506-b555db893f72","Content-Type":"application/json"}});L.getInitialCards().then((e=>{b=new v({items:e,renderer:e=>{const t=g(e);b.addItem(t)}},".gallery__cards"),b.renderItems()})).catch((e=>console.error(`Error setting up card section, ${e}`))),L.getUserInfo().then((e=>{y.setUserInfo(e)})).catch((e=>console.error(`Error loading profile info. ${e}`)));const g=e=>new m({name:e.name,link:e.link,isLiked:e.isLiked,_id:e._id},"#card-template",w,A,U).getView(),y=new class{constructor(e){let{name:t,about:r,avatar:s,_id:i}=e;this._name=t,this._about=r,this._avatar=s,this.id=i}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}setUserInfo(e){let{name:t,about:r,avatar:s}=e;t&&(this._name.textContent=t),r&&(this._about.textContent=r),s&&(this._avatar.src=s)}}(e),S=new f("#profile-picture-modal",(function(e){S.renderLoading(!0),L.changeAvatar(e).then((()=>{y.setUserInfo({avatar:e.picture}),t[o.getAttribute("name")].disableBtn(),S.close()})).catch(console.error).finally((()=>{S.renderLoading(!1)}))})),k=new f("#profile-edit-modal",(function(e){k.renderLoading(!0),L.setUserInfo(e).then((()=>{y.setUserInfo({name:e.name,about:e.about}),t[n.getAttribute("name")].disableBtn(),k.close()})).catch((e=>{console.error(`Error handling profile form submit. ${e}`)})).finally((()=>{k.renderLoading(!1)}))})),C=new f("#add-card-modal",(function(e){C.renderLoading(!0),L.addCard(e).then((e=>{const{_id:r,name:s,link:i,isLiked:n}=e,o={_id:r,name:s,link:i,isLiked:n};b.addItem(g(o)),t[a.getAttribute("name")].disableBtn(),a.reset(),C.close()})).catch((e=>{console.error(`Error: failed to add card. ${e}`)})).finally((()=>{C.renderLoading(!1)}))})),q=new class extends E{constructor(e){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._confirmBtn=this._popupElement.querySelector(".modal__confirm"),this._handleDeleteConfirm=null}handleConfirm(e){this._handleDeleteConfirm=e}viewLoading(e){this._confirmBtn.textContent=e?"Deleting...":"Yes"}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),"function"==typeof this._handleDeleteConfirm&&this._handleDeleteConfirm()}))}}("#confirm-modal"),B=new class extends E{constructor(e){super(e),this._previewImage=this._popupElement.querySelector("#modal-image"),this._previewImageTitle=this._popupElement.querySelector("#modal-image-title")}open(e){let{name:t,link:r}=e;this._previewImage.alt=t,this._previewImageTitle.textContent=t,this._previewImage.src=r,super.open()}}("#image-modal");var I;function w(e){B.open({name:e._name,link:e._link})}function U(e){L.setCardLiked(e.id,e.getLikedStatus()).then((t=>{e.handleIsLiked(t.isLiked)})).catch(console.error)}function A(e){q.open(),q.handleConfirm((()=>{q.viewLoading(!0),L.removeCard(e.id).then((()=>{e.removeCard(),q.close()})).catch((e=>{console.error(`Failed to delete card. ${e}`)})).finally(q.viewLoading(!1))}))}B.setEventListeners(),k.setEventListeners(),C.setEventListeners(),S.setEventListeners(),q.setEventListeners(),I={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},Array.from(document.querySelectorAll(I.formSelector)).forEach((e=>{const r=new p(I,e),s=e.getAttribute("name");t[s]=r,r.enableValidation()})),_.addEventListener("click",(()=>{t[o.getAttribute("name")].resetValidation(),u.value=y.getUserInfo().avatar,S.open()})),l.addEventListener("click",(()=>{t[n.getAttribute("name")].resetValidation();const{name:e,about:r}=y.getUserInfo();c.value=e,h.value=r,k.open()})),d.addEventListener("click",(()=>{C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
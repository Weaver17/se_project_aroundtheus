!function(){"use strict";const e={name:document.querySelector(".profile__name"),about:document.querySelector(".profile__description"),avatar:document.querySelector(".profile__avatar-image"),_id:"203ef5b29b8491c8911cf220"},t={inputSelector:".modal__input",submitButtonSelector:".modal__save",inactiveButtonClass:"modal__save_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-modal"),s=document.querySelector("#add-card-modal"),i=document.querySelector("#profile-picture-modal"),n=r.querySelector(".modal__form"),a=s.querySelector(".modal__form"),o=i.querySelector(".modal__form"),l=document.querySelector("#profile-edit-button"),d=document.querySelector("#add-card-button"),c=s.querySelector("#card-form"),h=document.querySelector("#modal-name"),_=document.querySelector("#modal-description"),u=(document.querySelector("#modal-title"),document.querySelector("#modal-link"),document.querySelector("#modal-image"),document.querySelector("#modal-image-title"),document.querySelector("#profile-avatar-button")),m=document.querySelector("#modal-picture"),p=document.querySelector(".profile__avatar-image");document.querySelector(".card__like-button"),document.querySelector(".card__delete-button"),document.querySelector(".modal__confirm");class v{constructor(e,t,r,s,i){let{name:n,link:a,isLiked:o,_id:l}=e;this._name=n,this._link=a,this._isLiked=o,this.id=l,this._cardSelector=t,this._handleImageClick=r,this._handleDeleteBtn=s,this._handleLikeBtn=i,this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeBtn(this)})),this._cardDeleteBtn.addEventListener("click",(()=>{this._handleDeleteBtn(this)})),this._cardImageEl.addEventListener("click",(()=>{this._handleImageClick(this)}))}removeCard(){this._cardElement.remove()}getCardId(){return this.id}getLikedStatus(){return this._isLiked}handleIsLiked(e){this._isLiked=e,this._renderisLiked()}_renderisLiked(){this._isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}getView(){return this._cardImageEl=this._cardElement.querySelector(".card__image"),this._cardTitleEl=this._cardElement.querySelector(".card__title"),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteBtn=this._cardElement.querySelector(".card__delete-button"),this._cardImageEl.src=this._link,this._cardImageEl.alt=this._name,this._cardTitleEl.textContent=this._name,this._setEventListeners(),this._renderisLiked(),this._cardElement}}class E{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputEls=Array.from(this._formElement.querySelectorAll(this._inputSelector))}disableBtn(){this._submitBtn.classList.add(this._inactiveButtonClass),this._submitBtn.disabled=!0}_enableBtn(){this._submitBtn.classList.remove(this._inactiveButtonClass),this._submitBtn.disabled=!1}_showInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_hasInvalidInput(){return!this._inputEls.every((e=>e.validity.valid))}_toggleButtonState(){this._hasInvalidInput(this._inputEls)?this.disableBtn(this._submitBtn,this._inactiveButtonClass):this._enableBtn(this._submitBtn,this._inactiveButtonClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_setEventListeners(){this._submitBtn=this._formElement.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault(),this.disableBtn()})),this._setEventListeners()}resetValidation(){this._inputEls.forEach((e=>{this._hideInputError(e)})),this._toggleButtonState(),this._formElement.reset()}}class f{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class b{constructor(e){this._popupElement=document.querySelector(e),this._closeBtn=this._popupElement.querySelector(".modal__exit"),this._modalBackground=this._popupElement.querySelector(".modal__background")}open(){document.addEventListener("keydown",this._handleEscapeClose),this._popupElement.classList.add("modal_opened")}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeClose)}_handleEscapeClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._closeBtn.addEventListener("click",(()=>{this.close()})),this._modalBackground.addEventListener("click",(()=>{this.close()}))}}class L extends b{constructor(e,t){super(e),this._handleFormSubmit=t,this._form=this._popupElement.querySelector(".modal__form"),this._submitBtn=this._popupElement.querySelector(".modal__save"),this._inputsArr=Array.from(this._form.querySelectorAll(".modal__input"))}_getInputValues(){const e={};return this._inputsArr.forEach((t=>{e[t.name]=t.value})),e}isLoading(e){this._submitBtn.textContent=e?"Saving...":"Save"}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())}))}}let S;const g=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r,this._authorization=r.authorization,this._contentType=r.contentType}_handleServerResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(`Api error getting cards, ${e}`)))}addCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then(this._handleServerResponse).catch((e=>console.error(e)))}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}setCardLiked(e,t){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleServerResponse).catch((e=>console.error(e)))}setUserInfo(e){let{name:t,about:r,avatar:s,_id:i}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r,avatar:s,_id:i})}).then(this._handleServerResponse).catch((e=>console.error(`Error setting api user info. ${e}`)))}changeAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e.picture})}).then(this._checkResponse).catch((e=>console.error(e)))}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"40adfe4e-c0e4-40a1-9506-b555db893f72","Content-Type":"application/json"}});g.getInitialCards().then((e=>{S=new f({items:e,renderer:e=>{const t=y(e);S.addItem(t)}},".gallery__cards"),S.renderItems()})).catch((e=>console.error(`Error setting up card section, ${e}`))),g.getUserInfo().then((e=>{k.setUserInfo({name:e.name,about:e.about,avatar:e.avatar})})).catch((e=>console.error(`Error loading profile info. ${e}`)));const y=e=>new v({name:e.name,link:e.link,isLiked:e.isLiked,_id:e._id},"#card-template",D,T,V).getView(),k=new class{constructor(e){let{name:t,about:r,avatar:s,_id:i}=e;this._name=t,this._about=r,this._avatar=s,this.id=i}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}setUserInfo(e){let{name:t,about:r,avatar:s}=e;t&&(this._name.textContent=t),r&&(this._about.textContent=r),s&&(this._avatar.src=s)}}(e),C=new L("#profile-picture-modal",(function(e){C.isLoading(!0),g.changeAvatar(e).then((()=>{k.setUserInfo({avatar:e.picture}),x.disableBtn(),C.close()})).catch((e=>{console.error(e)})).finally((()=>{C.isLoading(!1)}))})),B=new L("#profile-edit-modal",(function(e){console.log(e),B.isLoading(!0),g.setUserInfo(e).then((()=>{k.setUserInfo({name:e.name,about:e.about}),U.disableBtn(),B.close()})).catch((e=>{console.error(`Error handling profile form submit. ${e}`)})).finally((()=>{B.isLoading(!1)}))})),I=new L("#add-card-modal",(function(e){I.isLoading(!0),g.addCard(e).then((e=>{const{_id:t,name:r,link:s,isLiked:i}=e,n={_id:t,name:r,link:s,isLiked:i};S.addItem(y(n)),$.disableBtn(),c.reset(),I.close()})).catch((e=>{console.error(`Error: failed to add card. ${e}`)})).finally((()=>{I.isLoading(!1)}))})),q=new class extends b{constructor(e){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._confirmBtn=this._popupElement.querySelector(".modal__confirm"),this._handleDeleteConfirm=null}handleConfirm(e){this._handleDeleteConfirm=e}viewLoading(e){this._confirmBtn.textContent=e?"Deleting...":"Yes"}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),"function"==typeof this._handleDeleteConfirm&&this._handleDeleteConfirm()}))}}("#confirm-modal"),w=new class extends b{constructor(e){super(e),this._previewImage=this._popupElement.querySelector("#modal-image"),this._previewImageTitle=this._popupElement.querySelector("#modal-image-title")}open(e){let{name:t,link:r}=e;this._previewImage.alt=t,this._previewImageTitle.textContent=t,this._previewImage.src=r,super.open()}}("#image-modal"),U=new E(t,n),$=new E(t,a),x=new E(t,o);function D(e){w.open({name:e._name,link:e._link})}function V(e){g.setCardLiked(e.id,e.getLikedStatus()).then((t=>{e.handleIsLiked(t.isLiked)})).catch((e=>{console.error(e)}))}function T(e){q.open(),q.handleConfirm((()=>{q.viewLoading(!0),g.removeCard(e.id).then((()=>{e.removeCard(),q.viewLoading(!1),q.close()})).catch((e=>{console.error(`Failed to delete card. ${e}`),q.viewLoading(!1)}))}))}w.setEventListeners(),B.setEventListeners(),I.setEventListeners(),C.setEventListeners(),q.setEventListeners(),U.enableValidation(),$.enableValidation(),x.enableValidation(),u.addEventListener("click",(()=>{x.resetValidation(),m.value=p.src,C.open()})),l.addEventListener("click",(()=>{U.resetValidation();const{name:e,about:t}=k.getUserInfo();h.value=e,_.value=t,B.open()})),d.addEventListener("click",(()=>{$.resetValidation(),I.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,